#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

int main() {
    pid_t pid = fork();  // create child process

    if (pid < 0) {
        perror("Fork failed");
        exit(1);
    }
    else if (pid == 0) {
        // Child process
        printf("Child Process: PID = %d\n", getpid());
        printf("Child executing 'ls' command using exec()\n");
        
        execlp("ls", "ls", "-l", NULL);
        
        // If exec fails
        perror("exec failed");
        exit(1);
    } 
    else {
        // Parent process
        printf("Parent Process: PID = %d, waiting for child...\n", getpid());
        wait(NULL);
        printf("Child completed. Parent exiting.\n");
    }

    return 0;
}
